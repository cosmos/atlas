name: Build, Test and Coverage
on: 
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # weekly

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          github-token: ${{ secrets.github_token }}
        if: "env.GIT_DIFF != ''"

  test-and-cover:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: ['1.15']

    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@v2
      - run: make test
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          flag-name: Go-${{ matrix.go }}
          parallel: true

  # notifies that all test jobs are finished
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Install Go
  #     uses: actions/setup-go@v2.1.2
  #     with:
  #       go-version: 1.15.x
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Install golangci-lint
  #     run: |
  #       go get github.com/golangci/golangci-lint/cmd/golangci-lint
  #   - name: Run linters
  #     run: |
  #       export PATH=$PATH:$(go env GOPATH)/bin   
  #       make lint
