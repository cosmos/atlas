name: Build, Test and Cover
on: 
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # weekly

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          github-token: ${{ secrets.github_token }}
        if: "env.GIT_DIFF != ''"

  # Label of the runner job
  test-and-cover:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432       
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        go: ['1.15']
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@v2
      - run: make test
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          flag-name: Go-${{ matrix.go }}
          parallel: true

  # notifies that all test jobs are finished
  finish:
    needs: test-and-cover
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
